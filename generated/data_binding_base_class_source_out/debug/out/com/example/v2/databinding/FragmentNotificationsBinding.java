// Generated by view binder compiler. Do not edit!
package com.example.v2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.v2.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotificationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView blank;

  @NonNull
  public final TextView hours;

  @NonNull
  public final ImageView imageview3;

  @NonNull
  public final TextView loc;

  @NonNull
  public final ImageView mapView;

  @NonNull
  public final BottomNavigationView navView;

  @NonNull
  public final TextView textNotifications;

  @NonNull
  public final TextView title;

  private FragmentNotificationsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView blank,
      @NonNull TextView hours, @NonNull ImageView imageview3, @NonNull TextView loc,
      @NonNull ImageView mapView, @NonNull BottomNavigationView navView,
      @NonNull TextView textNotifications, @NonNull TextView title) {
    this.rootView = rootView;
    this.blank = blank;
    this.hours = hours;
    this.imageview3 = imageview3;
    this.loc = loc;
    this.mapView = mapView;
    this.navView = navView;
    this.textNotifications = textNotifications;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotificationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotificationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notifications, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotificationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blank;
      TextView blank = rootView.findViewById(id);
      if (blank == null) {
        break missingId;
      }

      id = R.id.hours;
      TextView hours = rootView.findViewById(id);
      if (hours == null) {
        break missingId;
      }

      id = R.id.imageview3;
      ImageView imageview3 = rootView.findViewById(id);
      if (imageview3 == null) {
        break missingId;
      }

      id = R.id.loc;
      TextView loc = rootView.findViewById(id);
      if (loc == null) {
        break missingId;
      }

      id = R.id.mapView;
      ImageView mapView = rootView.findViewById(id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.nav_view;
      BottomNavigationView navView = rootView.findViewById(id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.text_Notifications;
      TextView textNotifications = rootView.findViewById(id);
      if (textNotifications == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new FragmentNotificationsBinding((ConstraintLayout) rootView, blank, hours, imageview3,
          loc, mapView, navView, textNotifications, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
