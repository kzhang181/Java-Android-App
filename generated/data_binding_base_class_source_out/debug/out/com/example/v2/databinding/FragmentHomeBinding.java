// Generated by view binder compiler. Do not edit!
package com.example.v2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.example.v2.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView blank;

  @NonNull
  public final Guideline guideline0;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final ImageView imageview;

  @NonNull
  public final BottomNavigationView navView;

  @NonNull
  public final Button order;

  @NonNull
  public final ImageView tea;

  @NonNull
  public final TextView textHome;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView blank,
      @NonNull Guideline guideline0, @NonNull Guideline guideline1, @NonNull Guideline guideline2,
      @NonNull ImageView imageview, @NonNull BottomNavigationView navView, @NonNull Button order,
      @NonNull ImageView tea, @NonNull TextView textHome) {
    this.rootView = rootView;
    this.blank = blank;
    this.guideline0 = guideline0;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.imageview = imageview;
    this.navView = navView;
    this.order = order;
    this.tea = tea;
    this.textHome = textHome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blank;
      TextView blank = rootView.findViewById(id);
      if (blank == null) {
        break missingId;
      }

      id = R.id.guideline0;
      Guideline guideline0 = rootView.findViewById(id);
      if (guideline0 == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = rootView.findViewById(id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = rootView.findViewById(id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.imageview;
      ImageView imageview = rootView.findViewById(id);
      if (imageview == null) {
        break missingId;
      }

      id = R.id.nav_view;
      BottomNavigationView navView = rootView.findViewById(id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.order;
      Button order = rootView.findViewById(id);
      if (order == null) {
        break missingId;
      }

      id = R.id.tea;
      ImageView tea = rootView.findViewById(id);
      if (tea == null) {
        break missingId;
      }

      id = R.id.text_home;
      TextView textHome = rootView.findViewById(id);
      if (textHome == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, blank, guideline0, guideline1,
          guideline2, imageview, navView, order, tea, textHome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
